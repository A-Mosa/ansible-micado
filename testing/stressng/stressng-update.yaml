tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/COLAProject/COLARepo/master/nodes/custom_types.yaml

repositories:
  docker_hub: https://hub.docker.com/

policy_types:
  tosca.policies.Scaling.stressng:
    derived_from: tosca.policies.Scaling
    description: base policy defining sources, constants and queries for the stressng test
    properties:
      constants:
        type: map
        description: constants as a dictionary
        default:
          NODE_TH_MAX: '60'
          NODE_TH_MIN: '20'
          SERVICE_NAME: 'stressng'
          SERVICE_FULL_NAME: 'stressng_stressng'
          SERVICE_TH_MAX: '60'
          SERVICE_TH_MIN: '20'
      alerts:
        type: list
        description: alerts to consider
        default:
          - alert: node_overloaded
            expr: '(100-(avg(rate(node_cpu{group="worker_cluster",mode="idle"}[60s]))*100)) > {{NODE_TH_MAX}}'
            for: 1m
          - alert: node_underloaded
            expr: '(100-(avg(rate(node_cpu{group="worker_cluster",mode="idle"}[60s]))*100)) < {{NODE_TH_MIN}}'
            for: 1m
          - alert: service_overloaded
            expr: 'avg(rate(container_cpu_usage_seconds_total{container_label_com_docker_swarm_service_name="{{SERVICE_FULL_NAME}}"}[30s]))*100 > {{SERVICE_TH_MAX}}'
            for: 30s
          - alert: service_underloaded
            expr: 'avg(rate(container_cpu_usage_seconds_total{container_label_com_docker_swarm_service_name="{{SERVICE_FULL_NAME}}"}[30s]))*100 < {{SERVICE_TH_MIN}}'
            for: 30s

topology_template:
  node_templates:
    stressng:
      type: tosca.nodes.MiCADO.Container.Application.Docker
      properties:
         command: "--cpu 0 --cpu-method pi -l 5"
         deploy:
           resources:
             reservations:
               cpus: '1.0'
      artifacts:
       image:
         type: tosca.artifacts.Deployment.Image.Container.Docker
         file: lorel/docker-stress-ng
         repository: docker_hub

    worker_node:
      type: tosca.nodes.MiCADO.Occopus.CloudSigma.Compute
      properties:
        cloud:
          interface_cloud: cloudsigma
          endpoint_cloud: https://zrh.cloudsigma.com/api/2.0
      capabilities:
        host:
          properties:
            num_cpus: 2000
            mem_size: 1073741824
            vnc_password: secret
            libdrive_id: 87ce928e-e0bc-4cab-9502-514e523783e3

  policies:
    - scalability:
        type: tosca.policies.Scaling.stressng
        targets: [ worker_node ]
        properties:
          stage: runtime
          priority: 100
          min_instances: 1
          max_instances: 3
          scaling_rule: |
            if len(m_nodes) <= m_node_count and m_time_since_node_count_changed > 60:
              if node_overloaded:
                m_node_count+=1
              if node_underloaded:
                m_node_count-=1
            else:
              print('Transient phase, skipping update of nodes...')
    - scalability:
        type: tosca.policies.Scaling.stressng
        targets: [ stressng ]
        properties:
          stage: runtime
          priority: 100
          min_instances: 1
          max_instances: 3
          scaling_rule: |
            if len(m_nodes) == m_node_count:
              if service_overloaded and m_node_count > m_container_count:
                m_container_count+=1
              if service_underloaded:
                m_container_count-=1
            else:
              print('Transient phase, skipping update of containers...')
